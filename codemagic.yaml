workflows:
  ios-testflight-preview:
    name: iOS TestFlight
    max_build_duration: 60 # minutes
    environment:
      flutter: stable
      xcode: latest
      cocoapods: latest
    cache:
      cache_paths:
        - $HOME/.pub-cache
        - $FLUTTER_ROOT/.pub-cache
        - ios/Pods
        - node_modules
    scripts:
      # Install dependencies
      - name: Install Flutter dependencies
        script: cd client && flutter pub get

      # Make build scripts executable
      - name: Make build scripts executable
        script: cd client && chmod +x flutter_build.sh ios/scripts/embed_share_extension.sh

      # Optional: Clean old builds for safety (doesn't delete caches)
      - name: Clean old build artifacts
        script: cd client && flutter clean

      # Build the iOS IPA with automatic ShareExtension embedding (release)
      # This uses our enhanced build script that ensures ShareExtension.appex
      # is properly embedded in the final IPA for distribution
      - name: Build iOS IPA with ShareExtension
        script: cd client && flutter build ipa --release --export-options-plist=ios/export_options.plist

      # Code sign (handled by Codemagic's automatic signing)
      - name: Code sign IPA
        script: |
          # Codemagic automatically signs when distributing to TestFlight
          echo "Code signing handled via Codemagic"

    artifacts:
      - build/ios/ipa/*.ipa

    publishing:
      app_store_connect:
        api_key: $APP_STORE_KEY
        issuer_id: $APP_STORE_ISSUER
        key_id: $APP_STORE_KEY_ID
        submit_to_testflight: true # Automatically makes the build available to testers
        

  # Add a new workflow for development builds
  ios-development:
    name: iOS Development Build
    max_build_duration: 60 # minutes
    environment:
      flutter: stable
      xcode: latest
      cocoapods: latest
    cache:
      cache_paths:
        - $HOME/.pub-cache
        - $FLUTTER_ROOT/.pub-cache
        - ios/Pods
        - node_modules
    scripts:
      - name: Install Flutter dependencies
        script: cd client && flutter pub get

      - name: Make build scripts executable
        script: cd client && chmod +x flutter_build.sh

      - name: Clean old build artifacts
        script: cd client && flutter clean

      - name: Build iOS Development IPA
        script: cd client && flutter build ipa --debug --export-options-plist=ios/export_options_development.plist

    artifacts:
      - build/ios/ipa/*.ipa

  # Android Development Build
  android-development:
    name: Android Development Build
    max_build_duration: 45 # minutes
    environment:
      flutter: stable
      android_signing:
        - keystore_reference
      groups:
        - google_play # Google Play Console credentials
    cache:
      cache_paths:
        - $HOME/.pub-cache
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/.gradle/wrapper
    scripts:
      - name: Install Flutter dependencies
        script: cd client && flutter pub get

      - name: Set up Android keystore
        script: |
          echo $CM_KEYSTORE_PATH | base64 --decode > /tmp/keystore.keystore
          echo "keystoreFile=/tmp/keystore.keystore" > client/android/key.properties
          echo "keystorePassword=$CM_KEYSTORE_PASSWORD" >> client/android/key.properties
          echo "keyAlias=$CM_KEY_ALIAS" >> client/android/key.properties
          echo "keyPassword=$CM_KEY_PASSWORD" >> client/android/key.properties

      - name: Clean old build artifacts
        script: cd client && flutter clean

      - name: Build Android APK (Debug)
        script: cd client && flutter build apk --debug

      - name: Build Android App Bundle (Release)
        script: cd client && flutter build appbundle --release

    artifacts:
      - build/app/outputs/flutter-apk/app-debug.apk
      - build/app/outputs/bundle/release/app-release.aab
      - /tmp/keystore.keystore

    publishing:
      google_play:
        track: internal # Internal testing track
        submit_as_draft: true # Submit as draft for review

  # Android Production Release
  android-production:
    name: Android Production Release
    max_build_duration: 45 # minutes
    environment:
      flutter: stable
      android_signing:
        - keystore_reference
      groups:
        - google_play # Google Play Console credentials
    cache:
      cache_paths:
        - $HOME/.pub-cache
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/.gradle/wrapper
    scripts:
      - name: Install Flutter dependencies
        script: cd client && flutter pub get

      - name: Set up Android keystore
        script: |
          echo $CM_KEYSTORE_PATH | base64 --decode > /tmp/keystore.keystore
          echo "keystoreFile=/tmp/keystore.keystore" > client/android/key.properties
          echo "keystorePassword=$CM_KEYSTORE_PASSWORD" >> client/android/key.properties
          echo "keyAlias=$CM_KEY_ALIAS" >> client/android/key.properties
          echo "keyPassword=$CM_KEY_PASSWORD" >> client/android/key.properties

      - name: Clean old build artifacts
        script: cd client && flutter clean

      - name: Build Android App Bundle (Release)
        script: cd client && flutter build appbundle --release

      - name: Build Android APK (Release)
        script: cd client && flutter build apk --release

    artifacts:
      - build/app/outputs/bundle/release/app-release.aab
      - build/app/outputs/flutter-apk/app-release.apk
      - /tmp/keystore.keystore

    publishing:
      google_play:
        track: production # Production track
        submit_as_draft: false # Submit directly to production

  # Cross-platform build (both iOS and Android)
  cross-platform-release:
    name: Cross-Platform Release
    max_build_duration: 90 # minutes
    environment:
      flutter: stable
      xcode: latest
      cocoapods: latest
      android_signing:
        - keystore_reference
      groups:
        - google_play
    cache:
      cache_paths:
        - $HOME/.pub-cache
        - $FLUTTER_ROOT/.pub-cache
        - ios/Pods
        - node_modules
        - $HOME/.gradle/caches
        - $HOME/.gradle/wrapper
    scripts:
      - name: Install Flutter dependencies
        script: cd client && flutter pub get

      - name: Make build scripts executable
        script: cd client && chmod +x flutter_build.sh

      - name: Set up Android keystore
        script: |
          echo $CM_KEYSTORE_PATH | base64 --decode > /tmp/keystore.keystore
          echo "keystoreFile=/tmp/keystore.keystore" > client/android/key.properties
          echo "keystorePassword=$CM_KEYSTORE_PASSWORD" >> client/android/key.properties
          echo "keyAlias=$CM_KEY_ALIAS" >> client/android/key.properties
          echo "keyPassword=$CM_KEY_PASSWORD" >> client/android/key.properties

      - name: Clean old build artifacts
        script: cd client && flutter clean

      # Build iOS
      - name: Build iOS IPA
        script: cd client && flutter build ipa --release --export-options-plist=ios/export_options.plist

      # Build Android
      - name: Build Android App Bundle
        script: cd client && flutter build appbundle --release

    artifacts:
      - build/ios/ipa/*.ipa
      - build/app/outputs/bundle/release/app-release.aab
      - /tmp/keystore.keystore

    publishing:
      app_store_connect:
        api_key: $APP_STORE_KEY
        issuer_id: $APP_STORE_ISSUER
        key_id: $APP_STORE_KEY_ID
        submit_to_testflight: true
      google_play:
        track: production
        submit_as_draft: false