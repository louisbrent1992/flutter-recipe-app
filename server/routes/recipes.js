const express = require("express");
const router = express.Router();
const axios = require("axios"); // For calling an external AI API if needed
const { v4: uuidv4 } = require("uuid");

// In-memory recipes database
let recipes = [];

// GET /recipes - Fetch all recipes
router.get("/", (req, res) => {
	res.json(recipes);
});

// GET /recipes/:id - Get a specific recipe
router.get("/:id", (req, res) => {
	const recipe = recipes.find((r) => r.id === req.params.id);
	if (recipe) {
		res.json(recipe);
	} else {
		res.status(404).json({ error: "Recipe not found" });
	}
});

// POST /recipes - Create a new recipe
router.post("/", (req, res) => {
	const newRecipe = { id: uuidv4(), ...req.body };
	recipes.push(newRecipe);
	res.status(201).json(newRecipe);
});

// PUT /recipes/:id - Update an existing recipe
router.put("/:id", (req, res) => {
	const index = recipes.findIndex((r) => r.id === req.params.id);
	if (index !== -1) {
		recipes[index] = { ...recipes[index], ...req.body };
		res.json(recipes[index]);
	} else {
		res.status(404).json({ error: "Recipe not found" });
	}
});

// DELETE /recipes/:id - Delete a recipe
router.delete("/:id", (req, res) => {
	const index = recipes.findIndex((r) => r.id === req.params.id);
	if (index !== -1) {
		const deleted = recipes.splice(index, 1);
		res.json(deleted[0]);
	} else {
		res.status(404).json({ error: "Recipe not found" });
	}
});

// POST /recipes/generate - AI-generated recipe creation
router.post("/generate", async (req, res) => {
	const { ingredients, dietaryRestrictions, cuisineType } = req.body;

	// Dummy AI integration - in a real scenario, call an external AI API (e.g., OpenAI)
	const generatedRecipe = {
		id: uuidv4(),
		title: `AI Generated Recipe (${cuisineType || "Fusion"})`,
		ingredients: ingredients.split(",").map((item) => item.trim()),
		steps: ["Preheat your oven", "Mix the ingredients", "Bake for 25 minutes"],
		description: "This is a recipe generated by AI based on your inputs.",
	};

	// Optionally, store the generated recipe
	recipes.push(generatedRecipe);

	res.json(generatedRecipe);
});

// POST /recipes/import - Social media recipe import parser
router.post("/import", async (req, res) => {
	const { url } = req.body;

	// Dummy parsing logic: In a real scenario, perform web scraping or use an API
	const importedRecipe = {
		id: uuidv4(),
		title: "Imported Recipe from Social Media",
		ingredients: ["1 cup flour", "2 eggs", "1/2 cup milk"],
		steps: ["Mix ingredients", "Cook on a skillet", "Serve warm"],
		description:
			"This recipe was imported and parsed from a social media post.",
	};

	recipes.push(importedRecipe);

	res.json(importedRecipe);
});

module.exports = router;
